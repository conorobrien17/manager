# Generated by Django 3.1.4 on 2020-12-31 02:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="The client's first name", max_length=64)),
                ('last_name', models.CharField(help_text="The client's last name", max_length=64)),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('cell_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email_address', models.EmailField(blank=True, help_text="The client's email address", max_length=256)),
            ],
            options={
                'verbose_name_plural': 'Clients',
                'ordering': ['last_name', 'first_name'],
                'permissions': [('can_view_contact_info', "Can view client's contact information")],
            },
        ),
        migrations.CreateModel(
            name='HistoryLogUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The primary text of the update', max_length=64)),
                ('theme', models.CharField(default='default', help_text='The theme to be used if any on the update', max_length=32)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'HistoryLogUpdates',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The name of the service', max_length=128)),
                ('description', models.TextField(blank=True, help_text='A description of this service and what is typically done.')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='The quantity of this service item', null=True)),
                ('price', models.FloatField(help_text='The quoted price of the service', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'verbose_name_plural': 'Services',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of a job/quote status', max_length=32)),
                ('theme', models.CharField(help_text='The color theme for this status', max_length=32)),
                ('modified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A brief descriptive title of the job', max_length=64)),
                ('scheduled_time', models.DateTimeField(help_text='The time and date scheduled for the quote')),
                ('office_notes', models.TextField(help_text='Office and administrative notes about the quote')),
                ('quote_notes', models.TextField(help_text='Notes for the quote and potential job itself')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotes', to='carbina.client')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_items', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_requested', to='carbina.service')),
                ('status_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_history', to='carbina.status')),
            ],
            options={
                'ordering': ['-scheduled_time', 'title'],
                'permissions': [('can_view_price', "Can view each item's estimated price"), ('can_edit_price', "Can edit each item's estimated price")],
            },
        ),
        migrations.CreateModel(
            name='JobPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(help_text='The unique file name for the image.', max_length=128, unique=True)),
                ('image', models.ImageField(help_text='The image for a job or quote', upload_to='job_pictures/')),
                ('caption', models.TextField(blank=True, help_text='A caption to accompany the image')),
                ('upload_timestamp', models.DateTimeField(auto_now_add=True, help_text='Timestamp for when the image was uploaded')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_pictures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-upload_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A brief descriptive title of the job', max_length=64)),
                ('scheduled_time', models.DateTimeField(help_text='The scheduled start time of the job')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('storm_job', models.BooleanField(default=False, help_text='Is this a storm damage job?')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='carbina.client')),
                ('foreman', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('history_log', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_log', to='carbina.historylogupdate')),
                ('images', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='carbina.jobpicture')),
                ('quote', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quote', to='carbina.quote')),
                ('service_items', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='carbina.service')),
                ('status_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_status_history', to='carbina.status')),
            ],
            options={
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(help_text="The property's street address", max_length=256)),
                ('city', models.CharField(help_text='The town or city where the property is located', max_length=128)),
                ('state', models.CharField(help_text='The state where the property is located', max_length=64)),
                ('zip_code', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('static_map', models.ImageField(blank=True, null=True, upload_to='images')),
                ('distance_shop', models.FloatField(null=True)),
                ('duration_shop', models.FloatField(null=True)),
                ('driving_summary', models.CharField(blank=True, help_text='Brief summary of the recommended route to the address from the shop', max_length=256)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_addresses', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='carbina.client')),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
