# Generated by Django 3.1 on 2020-10-20 23:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import employee_auth.models
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=32, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=64)),
                ('personal_email', models.EmailField(max_length=128, unique=True)),
                ('company_email', models.EmailField(max_length=128, unique=True)),
                ('company_email_password', models.CharField(blank=True, max_length=512)),
                ('job_title', models.CharField(max_length=64)),
                ('phone', phone_field.models.PhoneField(help_text='Best phone number to contact', max_length=31)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('account_creation_dt', models.DateTimeField(auto_now_add=True, help_text='The date and time the account was created.')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, help_text="The employee's profile picture", null=True, upload_to='')),
            ],
            options={
                'ordering': ['username'],
                'permissions': [('edit_all_users', 'Can edit any user with expanded fields'), ('edit_username', "Can edit a user's username"), ('edit_department', 'Can assign a user to a department'), ('edit_staff_status', "Can edit a user's staff status"), ('view_phone_number', "Can view a user's phone number")],
            },
            managers=[
                ('objects', employee_auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, help_text="A description of the department and what it's employees do.")),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='employee_auth.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='employee_au_usernam_3deabe_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['first_name'], name='employee_au_first_n_8a89a8_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_name'], name='employee_au_last_na_daccb0_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['personal_email'], name='employee_au_persona_320962_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['company_email'], name='employee_au_company_bc9bdc_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['department'], name='employee_au_departm_d8a81a_idx'),
        ),
    ]
